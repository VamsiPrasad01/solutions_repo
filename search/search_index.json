{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Investigating the Range as a Function of the Angle of Projection A Comprehensive Physics and Computational Analysis 1. Theoretical Foundation 1.1 Derivation of Projectile Motion Equations We begin with Newton's second law in 2D for a projectile with initial velocity v\u2080 at angle \u03b8 under gravity g : Horizontal Motion (x-axis): No acceleration \u2192 Uniform motion [ \\frac{d^2x}{dt^2} = 0 \\implies x(t) = v_{0x}t = \\color{#E74C3C}{v_0\\cos\\theta}\\cdot t ] Vertical Motion (y-axis): Constant acceleration (-g) [ \\frac{d^2y}{dt^2} = -g \\implies y(t) = \\color{#E74C3C}{v_0\\sin\\theta}\\cdot t - \\frac{1}{2}\\color{#E74C3C}{g}t^2 ] 1.2 Time of Flight and Range Solving for when the projectile returns to ground (y=0): [ T = \\frac{2\\color{#E74C3C}{v_0\\sin\\theta}}{\\color{#E74C3C}{g}} ] Substituting into x(t) gives the range equation : [ R = \\frac{\\color{#E74C3C}{v_0^2}\\sin(2\\theta)}{\\color{#E74C3C}{g}} \\quad \\text{(Maximum at \u03b8=45\u00b0)} ] 1.3 Family of Solutions The general solution forms a parameterized family based on: - Initial velocity (v\u2080) - Launch angle (\u03b8) - Gravity (g) - Initial height (h\u2080) 2. Range Analysis 2.1 Angle Dependence Key characteristics of the range equation: - Peak range at \u03b8=45\u00b0 (when sin(2\u03b8)=1) - Complementary angles (e.g., 30\u00b0 & 60\u00b0) give equal ranges - Zero range at \u03b8=0\u00b0 and \u03b8=90\u00b0 2.2 Parameter Sensitivity Analysis Parameter Effect Mathematical Relationship v\u2080 Quadratic impact R \u221d v\u2080\u00b2 g Inverse relationship R \u221d 1/g h\u2080 Increases range Modified equation required 3. Practical Applications 3.1 Real-World Modifications Scenario Effect on Projectile Uphill Launch Optimal angle >45\u00b0 Downhill Launch Optimal angle <45\u00b0 Air Resistance Reduces range by 30-50%, optimal angle ~40\u00b0 Spin (Magnus Effect) Creates curved trajectories 4. Computational Implementation 4.1 Python Simulation Code Click to see the Python simulation code import numpy as np import matplotlib.pyplot as plt from ipywidgets import interact def plot_trajectory(v0=20, theta=45, g=9.81, h0=0): theta_rad = np.radians(theta) t_flight = (v0*np.sin(theta_rad) + np.sqrt((v0*np.sin(theta_rad))**2 + 2*g*h0))/g t = np.linspace(0, t_flight, 100) x = v0*np.cos(theta_rad)*t y = h0 + v0*np.sin(theta_rad)*t - 0.5*g*t**2 plt.figure(figsize=(10,5)) plt.plot(x, y, 'b-', linewidth=2) plt.title(f'Projectile Trajectory (\u03b8={theta}\u00b0, v\u2080={v0}m/s)') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Height (m)') plt.grid() plt.ylim(0, max(y)*1.2) interact(plot_trajectory, v0=(5,50,5), theta=(0,90,5), g=(1.62,24.79,0.1), h0=(0,20,1)) ### ** 4.2 Key Visualizations ** 1. ** Range vs Angle Curves ** ![alt text]( ) 2. ** Trajectories for Different Launch Angles ** ![alt text]( ) --- ## ** 5. Deliverables ** ### ** 5.1 Complete Analysis Package ** - **Jupyter Notebook** with: - Interactive trajectory simulator - Parameter sensitivity plots - Planetary environment comparisons ### ** 5.2 Limitations and Extensions ** **Current Limitations:** - No air resistance - Flat Earth assumption - 2D-only simulation **Advanced Extensions:** 1. ** Drag Force Model ** \\[ F_{drag} = -\\frac{1}{2}C_d\\rho Av^2 \\] 2. ** Wind Effects ** - Crosswind compensation 3. ** 3D Simulation ** - Coriolis effect for long-range projectiles --- ** Conclusion: ** This investigation bridges fundamental physics with practical applications through computational modeling. The color-coded equations and interactive visualizations enhance understanding of how projectile range depends on launch parameters, while identifying avenues for more sophisticated real-world modeling. ** Complete code and interactive demos available in the supplementary materials. **","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"A Comprehensive Physics and Computational Analysis","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#11-derivation-of-projectile-motion-equations","text":"We begin with Newton's second law in 2D for a projectile with initial velocity v\u2080 at angle \u03b8 under gravity g : Horizontal Motion (x-axis): No acceleration \u2192 Uniform motion [ \\frac{d^2x}{dt^2} = 0 \\implies x(t) = v_{0x}t = \\color{#E74C3C}{v_0\\cos\\theta}\\cdot t ] Vertical Motion (y-axis): Constant acceleration (-g) [ \\frac{d^2y}{dt^2} = -g \\implies y(t) = \\color{#E74C3C}{v_0\\sin\\theta}\\cdot t - \\frac{1}{2}\\color{#E74C3C}{g}t^2 ]","title":"1.1 Derivation of Projectile Motion Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#12-time-of-flight-and-range","text":"Solving for when the projectile returns to ground (y=0): [ T = \\frac{2\\color{#E74C3C}{v_0\\sin\\theta}}{\\color{#E74C3C}{g}} ] Substituting into x(t) gives the range equation : [ R = \\frac{\\color{#E74C3C}{v_0^2}\\sin(2\\theta)}{\\color{#E74C3C}{g}} \\quad \\text{(Maximum at \u03b8=45\u00b0)} ]","title":"1.2 Time of Flight and Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#13-family-of-solutions","text":"The general solution forms a parameterized family based on: - Initial velocity (v\u2080) - Launch angle (\u03b8) - Gravity (g) - Initial height (h\u2080)","title":"1.3 Family of Solutions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-range-analysis","text":"","title":"2. Range Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#21-angle-dependence","text":"Key characteristics of the range equation: - Peak range at \u03b8=45\u00b0 (when sin(2\u03b8)=1) - Complementary angles (e.g., 30\u00b0 & 60\u00b0) give equal ranges - Zero range at \u03b8=0\u00b0 and \u03b8=90\u00b0","title":"2.1 Angle Dependence"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#22-parameter-sensitivity-analysis","text":"Parameter Effect Mathematical Relationship v\u2080 Quadratic impact R \u221d v\u2080\u00b2 g Inverse relationship R \u221d 1/g h\u2080 Increases range Modified equation required","title":"2.2 Parameter Sensitivity Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#31-real-world-modifications","text":"Scenario Effect on Projectile Uphill Launch Optimal angle >45\u00b0 Downhill Launch Optimal angle <45\u00b0 Air Resistance Reduces range by 30-50%, optimal angle ~40\u00b0 Spin (Magnus Effect) Creates curved trajectories","title":"3.1 Real-World Modifications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-computational-implementation","text":"","title":"4. Computational Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#41-python-simulation-code","text":"Click to see the Python simulation code import numpy as np import matplotlib.pyplot as plt from ipywidgets import interact def plot_trajectory(v0=20, theta=45, g=9.81, h0=0): theta_rad = np.radians(theta) t_flight = (v0*np.sin(theta_rad) + np.sqrt((v0*np.sin(theta_rad))**2 + 2*g*h0))/g t = np.linspace(0, t_flight, 100) x = v0*np.cos(theta_rad)*t y = h0 + v0*np.sin(theta_rad)*t - 0.5*g*t**2 plt.figure(figsize=(10,5)) plt.plot(x, y, 'b-', linewidth=2) plt.title(f'Projectile Trajectory (\u03b8={theta}\u00b0, v\u2080={v0}m/s)') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Height (m)') plt.grid() plt.ylim(0, max(y)*1.2) interact(plot_trajectory, v0=(5,50,5), theta=(0,90,5), g=(1.62,24.79,0.1), h0=(0,20,1)) ### ** 4.2 Key Visualizations ** 1. ** Range vs Angle Curves ** ![alt text]( ) 2. ** Trajectories for Different Launch Angles ** ![alt text]( ) --- ## ** 5. Deliverables ** ### ** 5.1 Complete Analysis Package ** - **Jupyter Notebook** with: - Interactive trajectory simulator - Parameter sensitivity plots - Planetary environment comparisons ### ** 5.2 Limitations and Extensions ** **Current Limitations:** - No air resistance - Flat Earth assumption - 2D-only simulation **Advanced Extensions:** 1. ** Drag Force Model ** \\[ F_{drag} = -\\frac{1}{2}C_d\\rho Av^2 \\] 2. ** Wind Effects ** - Crosswind compensation 3. ** 3D Simulation ** - Coriolis effect for long-range projectiles --- ** Conclusion: ** This investigation bridges fundamental physics with practical applications through computational modeling. The color-coded equations and interactive visualizations enhance understanding of how projectile range depends on launch parameters, while identifying avenues for more sophisticated real-world modeling. ** Complete code and interactive demos available in the supplementary materials. **","title":"4.1 Python Simulation Code"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"}]}