{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Investigating the Range as a Function of the Angle of Projection A Comprehensive Physics and Computational Analysis 1. Theoretical Foundation 1.1 Derivation of Projectile Motion Equations We begin with Newton's second law in 2D for a projectile with initial velocity v\u2080 at angle \u03b8 under gravity g : Horizontal Motion (x-axis): No acceleration \u2192 Uniform motion $$ \\frac{d^2x}{dt^2} = 0 \\implies x(t) = v_{0x}t = \\color{#E74C3C}{v_0\\cos\\theta} \\cdot t $$ Vertical Motion (y-axis): Constant acceleration (-g) $$ \\frac{d^2y}{dt^2} = -g \\implies y(t) = \\color{#E74C3C}{v_0\\sin\\theta}\\cdot t - \\frac{1}{2}\\color{#E74C3C}{g}t^2 $$ 1.2 Time of Flight and Range Solving for when the projectile returns to ground (y=0): $$ T = \\frac{2\\color{#E74C3C}{v_0\\sin\\theta}}{\\color{#E74C3C}{g}} $$ Substituting into \\( x(t) \\) gives the range equation : $$ R = \\frac{\\color{#E74C3C}{v_0^2}\\sin(2\\theta)}{\\color{#E74C3C}{g}} \\quad \\text{(Maximum at \u03b8=45\u00b0)} $$ 1.3 Family of Solutions The general solution forms a parameterized family based on: - Initial velocity (v\u2080) - Launch angle (\u03b8) - Gravity (g) - Initial height (h\u2080) 2. Range Analysis 2.1 Angle Dependence Key characteristics of the range equation: - Peak range at \u03b8=45\u00b0 (when sin(2\u03b8)=1) - Complementary angles (e.g., 30\u00b0 & 60\u00b0) give equal ranges - Zero range at \u03b8=0\u00b0 and \u03b8=90\u00b0 2.2 Parameter Sensitivity Analysis Parameter Effect Mathematical Relationship v\u2080 Quadratic impact \\( R \\propto v_0^2 \\) g Inverse relationship \\( R \\propto \\frac{1}{g} \\) h\u2080 Increases range Modified equation required 3. Practical Applications 3.1 Real-World Modifications Scenario Effect on Projectile Uphill Launch Optimal angle >45\u00b0 Downhill Launch Optimal angle <45\u00b0 Air Resistance Reduces range by 30-50%, optimal angle ~40\u00b0 Spin (Magnus Effect) Creates curved trajectories 4. Computational Implementation 4.1 Python Simulation Code Click to see the Python simulation code import numpy as np import matplotlib.pyplot as plt from ipywidgets import interact def plot_trajectory(v0=20, theta=45, g=9.81, h0=0): theta_rad = np.radians(theta) t_flight = (v0*np.sin(theta_rad) + np.sqrt((v0*np.sin(theta_rad))**2 + 2*g*h0))/g t = np.linspace(0, t_flight, 100) x = v0*np.cos(theta_rad)*t y = h0 + v0*np.sin(theta_rad)*t - 0.5*g*t**2 plt.figure(figsize=(10,5)) plt.plot(x, y, 'b-', linewidth=2) plt.title(f'Projectile Trajectory (\u03b8={theta}\u00b0, v\u2080={v0}m/s)') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Height (m)') plt.grid() plt.ylim(0, max(y)*1.2) interact(plot_trajectory, v0=(5,50,5), theta=(0,90,5), g=(1.62,24.79,0.1), h0=(0,20,1)) 4.2 Key Visualizations Range vs Angle Curves Trajectories for Different Launch Angles 5. Deliverables 5.1 Complete Analysis Package Jupyter Notebook with: Interactive trajectory simulator Parameter sensitivity plots Planetary environment comparisons 5.2 Limitations and Extensions Current Limitations: - No air resistance - Flat Earth assumption - 2D-only simulation Advanced Extensions: 1. Drag Force Model $$ F_{\\text{drag}} = -\\frac{1}{2}C_d\\rho A v^2 $$ 2. Wind Effects - Crosswind compensation 3. 3D Simulation - Coriolis effect for long-range projectiles Conclusion: This investigation bridges fundamental physics with practical applications through computational modeling. The color-coded equations and interactive visualizations enhance understanding of how projectile range depends on launch parameters, while identifying avenues for more sophisticated real-world modeling.","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"A Comprehensive Physics and Computational Analysis","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#11-derivation-of-projectile-motion-equations","text":"We begin with Newton's second law in 2D for a projectile with initial velocity v\u2080 at angle \u03b8 under gravity g : Horizontal Motion (x-axis): No acceleration \u2192 Uniform motion $$ \\frac{d^2x}{dt^2} = 0 \\implies x(t) = v_{0x}t = \\color{#E74C3C}{v_0\\cos\\theta} \\cdot t $$ Vertical Motion (y-axis): Constant acceleration (-g) $$ \\frac{d^2y}{dt^2} = -g \\implies y(t) = \\color{#E74C3C}{v_0\\sin\\theta}\\cdot t - \\frac{1}{2}\\color{#E74C3C}{g}t^2 $$","title":"1.1 Derivation of Projectile Motion Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#12-time-of-flight-and-range","text":"Solving for when the projectile returns to ground (y=0): $$ T = \\frac{2\\color{#E74C3C}{v_0\\sin\\theta}}{\\color{#E74C3C}{g}} $$ Substituting into \\( x(t) \\) gives the range equation : $$ R = \\frac{\\color{#E74C3C}{v_0^2}\\sin(2\\theta)}{\\color{#E74C3C}{g}} \\quad \\text{(Maximum at \u03b8=45\u00b0)} $$","title":"1.2 Time of Flight and Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#13-family-of-solutions","text":"The general solution forms a parameterized family based on: - Initial velocity (v\u2080) - Launch angle (\u03b8) - Gravity (g) - Initial height (h\u2080)","title":"1.3 Family of Solutions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-range-analysis","text":"","title":"2. Range Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#21-angle-dependence","text":"Key characteristics of the range equation: - Peak range at \u03b8=45\u00b0 (when sin(2\u03b8)=1) - Complementary angles (e.g., 30\u00b0 & 60\u00b0) give equal ranges - Zero range at \u03b8=0\u00b0 and \u03b8=90\u00b0","title":"2.1 Angle Dependence"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#22-parameter-sensitivity-analysis","text":"Parameter Effect Mathematical Relationship v\u2080 Quadratic impact \\( R \\propto v_0^2 \\) g Inverse relationship \\( R \\propto \\frac{1}{g} \\) h\u2080 Increases range Modified equation required","title":"2.2 Parameter Sensitivity Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#31-real-world-modifications","text":"Scenario Effect on Projectile Uphill Launch Optimal angle >45\u00b0 Downhill Launch Optimal angle <45\u00b0 Air Resistance Reduces range by 30-50%, optimal angle ~40\u00b0 Spin (Magnus Effect) Creates curved trajectories","title":"3.1 Real-World Modifications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-computational-implementation","text":"","title":"4. Computational Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#41-python-simulation-code","text":"Click to see the Python simulation code import numpy as np import matplotlib.pyplot as plt from ipywidgets import interact def plot_trajectory(v0=20, theta=45, g=9.81, h0=0): theta_rad = np.radians(theta) t_flight = (v0*np.sin(theta_rad) + np.sqrt((v0*np.sin(theta_rad))**2 + 2*g*h0))/g t = np.linspace(0, t_flight, 100) x = v0*np.cos(theta_rad)*t y = h0 + v0*np.sin(theta_rad)*t - 0.5*g*t**2 plt.figure(figsize=(10,5)) plt.plot(x, y, 'b-', linewidth=2) plt.title(f'Projectile Trajectory (\u03b8={theta}\u00b0, v\u2080={v0}m/s)') plt.xlabel('Horizontal Distance (m)') plt.ylabel('Height (m)') plt.grid() plt.ylim(0, max(y)*1.2) interact(plot_trajectory, v0=(5,50,5), theta=(0,90,5), g=(1.62,24.79,0.1), h0=(0,20,1))","title":"4.1 Python Simulation Code"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#42-key-visualizations","text":"Range vs Angle Curves Trajectories for Different Launch Angles","title":"4.2 Key Visualizations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-deliverables","text":"","title":"5. Deliverables"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#51-complete-analysis-package","text":"Jupyter Notebook with: Interactive trajectory simulator Parameter sensitivity plots Planetary environment comparisons","title":"5.1 Complete Analysis Package"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#52-limitations-and-extensions","text":"Current Limitations: - No air resistance - Flat Earth assumption - 2D-only simulation Advanced Extensions: 1. Drag Force Model $$ F_{\\text{drag}} = -\\frac{1}{2}C_d\\rho A v^2 $$ 2. Wind Effects - Crosswind compensation 3. 3D Simulation - Coriolis effect for long-range projectiles Conclusion: This investigation bridges fundamental physics with practical applications through computational modeling. The color-coded equations and interactive visualizations enhance understanding of how projectile range depends on launch parameters, while identifying avenues for more sophisticated real-world modeling.","title":"5.2 Limitations and Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Investigating the Dynamics of a Forced Damped Pendulum 1. Introduction and Motivation The forced damped pendulum serves as a paradigm for understanding nonlinear dynamics in physical systems. By introducing both damping and periodic forcing, this simple mechanical system exhibits remarkably complex behavior including: Harmonic oscillations (regular periodic motion) Resonance phenomena (energy amplification at specific frequencies) Chaotic behavior (extreme sensitivity to initial conditions) These dynamics have direct applications in: - Energy harvesting systems - Structural engineering (bridge design, earthquake protection) - Biological oscillators (neural rhythms, cardiac dynamics) 2. Theoretical Framework 2.1 Governing Equations The complete nonlinear equation of motion: \\frac{d^2\\theta}{dt^2} + \\textcolor{blue}{2\\beta}\\frac{d\\theta}{dt} + \\textcolor{green}{\\omega_0^2\\sin\\theta} = \\textcolor{red}{F\\cos(\\omega t)} Key components: 1. Damping term (2\u03b2\u1e8b) : Represents energy dissipation 2. Restoring force (\u03c9\u2080\u00b2sin\u03b8) : Nonlinearity source 3. Driving force (Fcos(\u03c9t)) : External energy input 2.2 Linearized Approximation For small angles (\u03b8 < 0.5 rad), we approximate sin\u03b8 \u2248 \u03b8: \\frac{d^2\\theta}{dt^2} + 2\\beta\\frac{d\\theta}{dt} + \\omega_0^2\\theta = F\\cos(\\omega t) Analytical solution components: - Transient solution : Decays exponentially \u221d e^(-\u03b2t) - Steady-state solution : Persists with driving frequency \u03c9 2.3 Resonance Analysis Resonance condition occurs when: \\omega_{res} = \\sqrt{\\omega_0^2 - 2\\beta^2} Peak amplitude at resonance: \\theta_{max} = \\frac{F}{2\\beta\\omega_0} Quality factor characterizes resonance sharpness: Q = \\frac{\\omega_0}{2\\beta} 3. Dynamic Behavior Analysis 3.1 Damping Effects Three regimes: 1. Underdamped (\u03b2 < \u03c9\u2080) : Oscillatory decay 2. Critically damped (\u03b2 = \u03c9\u2080) : Fastest non-oscillatory return 3. Overdamped (\u03b2 > \u03c9\u2080) : Slow non-oscillatory return Visualization: ??? [Figure 1: Time series plots showing \u03b8(t) for underdamped (blue), critically damped (green), and overdamped (red) cases. The underdamped case shows decaying oscillations while the others approach equilibrium monotonically.] 3.2 Driving Force Effects Behavior transitions: - Small F : Regular periodic motion - Intermediate F : Period doubling - Large F : Chaotic motion Visualization: ??? [Figure 2: Bifurcation diagram showing system behavior as F increases from 0 to 2.5. The plot transitions from a single stable solution to period-doubling cascades eventually leading to a chaotic band.] 3.3 Phase Space Analysis Key features: - Limit cycles : Closed orbits for periodic motion - Strange attractors : Fractal structures in chaotic regime Visualization: ??? [Figure 3: Phase portraits showing (\u03b8, d\u03b8/dt) for (A) periodic motion (smooth ellipse) and (B) chaotic motion (complex, non-repeating pattern).] 4. Advanced Characterization 4.1 Poincar\u00e9 Sections Construction method: 1. Sample system state at each driving period T = 2\u03c0/\u03c9 2. Plot (\u03b8, d\u03b8/dt) at these sampling times Interpretation: - Periodic motion: Discrete points - Chaotic motion: Fractal point distribution Visualization: ??? [Figure 4: Poincar\u00e9 sections showing (left) 3 discrete points for period-3 motion and (right) fractal structure for chaotic motion.] 4.2 Lyapunov Exponents Chaos criterion : - Positive largest Lyapunov exponent indicates chaos - Calculation method: python # Python code for Lyapunov exponent estimation from numpy.linalg import norm def lyapunov_exponent(trajectory): divergence_rates = [] for i in range(len(trajectory)-1): divergence = norm(trajectory[i+1] - trajectory[i]) divergence_rates.append(np.log(divergence)) return np.mean(divergence_rates) 5. Practical Applications 5.1 Energy Harvesting Design principles: 1. Tune natural frequency \u03c9\u2080 to match environmental vibrations 2. Optimize damping \u03b2 = \u03c9\u2080/\u221a2 for maximum power transfer 3. Example: Piezoelectric pendulum arrays on bridges 5.2 Structural Engineering Case studies: - Tacoma Narrows Bridge (1940) : Resonance collapse - Modern solutions : Tuned mass dampers in skyscrapers Design equation for damper mass m: m = \\frac{k}{\\omega_d^2} - M where M is structure mass, k is stiffness. 6. Computational Implementation 6.1 Complete Python Model import numpy as np from scipy.integrate import solve_ivp import matplotlib.pyplot as plt def pendulum_system(t, y, beta, F, omega, omega0): theta, dtheta = y return [dtheta, -2*beta*dtheta - omega0**2*np.sin(theta) + F*np.cos(omega*t)] # Simulation parameters params = { 'beta': 0.25, # Damping coefficient 'F': 1.5, # Driving amplitude 'omega': 0.8, # Driving frequency 'omega0': 1.0 # Natural frequency } # Solve over 100s with 5000 points sol = solve_ivp(pendulum_system, [0, 100], [0.1, 0], args=(params['beta'], params['F'], params['omega'], params['omega0']), dense_output=True, max_step=0.1) # Generate plots t = np.linspace(0, 50, 5000) theta, dtheta = sol.sol(t) plt.figure(figsize=(12, 5)) plt.subplot(1, 2, 1) plt.plot(t, theta, 'b') plt.title('Time Series') plt.xlabel('Time (s)'); plt.ylabel('\u03b8 (rad)') plt.subplot(1, 2, 2) plt.plot(theta, dtheta, 'r') plt.title('Phase Portrait') plt.xlabel('\u03b8 (rad)'); plt.ylabel('d\u03b8/dt (rad/s)') plt.show() 6.2 Visualization Suite Output figures: 1. Time series : System evolution \u03b8(t) 2. Phase portraits : Trajectories in (\u03b8, d\u03b8/dt) space 3. Poincar\u00e9 maps : System state sampled at driving period 4. Bifurcation diagrams : Behavior vs control parameter Visualization: ??? [Figure 5: Complete simulation output showing (A) time series, (B) phase portrait, (C) Poincar\u00e9 section, and (D) bifurcation diagram for the default parameters.] 7. Limitations and Extensions 7.1 Model Limitations Assumes constant parameters (\u03b2, F, \u03c9) Neglects higher-order nonlinearities Idealizes driving force as pure cosine 7.2 Advanced Extensions Nonlinear damping : math \\text{Damping force} = \\beta_1\\dot{\\theta} + \\beta_2|\\dot{\\theta}|\\dot{\\theta} Coupled pendulums : math \\frac{d^2\\theta_1}{dt^2} = -\\omega_0^2\\sin\\theta_1 + k(\\theta_2 - \\theta_1) Stochastic forcing : math \\frac{d^2\\theta}{dt^2} + 2\\beta\\frac{d\\theta}{dt} + \\omega_0^2\\sin\\theta = F(t) where F(t) is random noise. 8. Conclusion This analysis has demonstrated: 1. The rich dynamical behavior of forced damped pendulums 2. Transition mechanisms from order to chaos 3. Practical applications across engineering disciplines Future directions: - Experimental validation with physical pendulum setups - Machine learning approaches for chaos prediction - Quantum analogies in nanomechanical systems The forced damped pendulum remains a fundamental model system for understanding nonlinear dynamics across physics and engineering.","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-introduction-and-motivation","text":"The forced damped pendulum serves as a paradigm for understanding nonlinear dynamics in physical systems. By introducing both damping and periodic forcing, this simple mechanical system exhibits remarkably complex behavior including: Harmonic oscillations (regular periodic motion) Resonance phenomena (energy amplification at specific frequencies) Chaotic behavior (extreme sensitivity to initial conditions) These dynamics have direct applications in: - Energy harvesting systems - Structural engineering (bridge design, earthquake protection) - Biological oscillators (neural rhythms, cardiac dynamics)","title":"1. Introduction and Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-theoretical-framework","text":"","title":"2. Theoretical Framework"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#21-governing-equations","text":"The complete nonlinear equation of motion: \\frac{d^2\\theta}{dt^2} + \\textcolor{blue}{2\\beta}\\frac{d\\theta}{dt} + \\textcolor{green}{\\omega_0^2\\sin\\theta} = \\textcolor{red}{F\\cos(\\omega t)} Key components: 1. Damping term (2\u03b2\u1e8b) : Represents energy dissipation 2. Restoring force (\u03c9\u2080\u00b2sin\u03b8) : Nonlinearity source 3. Driving force (Fcos(\u03c9t)) : External energy input","title":"2.1 Governing Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#22-linearized-approximation","text":"For small angles (\u03b8 < 0.5 rad), we approximate sin\u03b8 \u2248 \u03b8: \\frac{d^2\\theta}{dt^2} + 2\\beta\\frac{d\\theta}{dt} + \\omega_0^2\\theta = F\\cos(\\omega t) Analytical solution components: - Transient solution : Decays exponentially \u221d e^(-\u03b2t) - Steady-state solution : Persists with driving frequency \u03c9","title":"2.2 Linearized Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#23-resonance-analysis","text":"Resonance condition occurs when: \\omega_{res} = \\sqrt{\\omega_0^2 - 2\\beta^2} Peak amplitude at resonance: \\theta_{max} = \\frac{F}{2\\beta\\omega_0} Quality factor characterizes resonance sharpness: Q = \\frac{\\omega_0}{2\\beta}","title":"2.3 Resonance Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-dynamic-behavior-analysis","text":"","title":"3. Dynamic Behavior Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#31-damping-effects","text":"Three regimes: 1. Underdamped (\u03b2 < \u03c9\u2080) : Oscillatory decay 2. Critically damped (\u03b2 = \u03c9\u2080) : Fastest non-oscillatory return 3. Overdamped (\u03b2 > \u03c9\u2080) : Slow non-oscillatory return Visualization: ??? [Figure 1: Time series plots showing \u03b8(t) for underdamped (blue), critically damped (green), and overdamped (red) cases. The underdamped case shows decaying oscillations while the others approach equilibrium monotonically.]","title":"3.1 Damping Effects"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#32-driving-force-effects","text":"Behavior transitions: - Small F : Regular periodic motion - Intermediate F : Period doubling - Large F : Chaotic motion Visualization: ??? [Figure 2: Bifurcation diagram showing system behavior as F increases from 0 to 2.5. The plot transitions from a single stable solution to period-doubling cascades eventually leading to a chaotic band.]","title":"3.2 Driving Force Effects"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#33-phase-space-analysis","text":"Key features: - Limit cycles : Closed orbits for periodic motion - Strange attractors : Fractal structures in chaotic regime Visualization: ??? [Figure 3: Phase portraits showing (\u03b8, d\u03b8/dt) for (A) periodic motion (smooth ellipse) and (B) chaotic motion (complex, non-repeating pattern).]","title":"3.3 Phase Space Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-advanced-characterization","text":"","title":"4. Advanced Characterization"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#41-poincare-sections","text":"Construction method: 1. Sample system state at each driving period T = 2\u03c0/\u03c9 2. Plot (\u03b8, d\u03b8/dt) at these sampling times Interpretation: - Periodic motion: Discrete points - Chaotic motion: Fractal point distribution Visualization: ??? [Figure 4: Poincar\u00e9 sections showing (left) 3 discrete points for period-3 motion and (right) fractal structure for chaotic motion.]","title":"4.1 Poincar\u00e9 Sections"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#42-lyapunov-exponents","text":"Chaos criterion : - Positive largest Lyapunov exponent indicates chaos - Calculation method: python # Python code for Lyapunov exponent estimation from numpy.linalg import norm def lyapunov_exponent(trajectory): divergence_rates = [] for i in range(len(trajectory)-1): divergence = norm(trajectory[i+1] - trajectory[i]) divergence_rates.append(np.log(divergence)) return np.mean(divergence_rates)","title":"4.2 Lyapunov Exponents"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-practical-applications","text":"","title":"5. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#51-energy-harvesting","text":"Design principles: 1. Tune natural frequency \u03c9\u2080 to match environmental vibrations 2. Optimize damping \u03b2 = \u03c9\u2080/\u221a2 for maximum power transfer 3. Example: Piezoelectric pendulum arrays on bridges","title":"5.1 Energy Harvesting"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#52-structural-engineering","text":"Case studies: - Tacoma Narrows Bridge (1940) : Resonance collapse - Modern solutions : Tuned mass dampers in skyscrapers Design equation for damper mass m: m = \\frac{k}{\\omega_d^2} - M where M is structure mass, k is stiffness.","title":"5.2 Structural Engineering"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#6-computational-implementation","text":"","title":"6. Computational Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#61-complete-python-model","text":"import numpy as np from scipy.integrate import solve_ivp import matplotlib.pyplot as plt def pendulum_system(t, y, beta, F, omega, omega0): theta, dtheta = y return [dtheta, -2*beta*dtheta - omega0**2*np.sin(theta) + F*np.cos(omega*t)] # Simulation parameters params = { 'beta': 0.25, # Damping coefficient 'F': 1.5, # Driving amplitude 'omega': 0.8, # Driving frequency 'omega0': 1.0 # Natural frequency } # Solve over 100s with 5000 points sol = solve_ivp(pendulum_system, [0, 100], [0.1, 0], args=(params['beta'], params['F'], params['omega'], params['omega0']), dense_output=True, max_step=0.1) # Generate plots t = np.linspace(0, 50, 5000) theta, dtheta = sol.sol(t) plt.figure(figsize=(12, 5)) plt.subplot(1, 2, 1) plt.plot(t, theta, 'b') plt.title('Time Series') plt.xlabel('Time (s)'); plt.ylabel('\u03b8 (rad)') plt.subplot(1, 2, 2) plt.plot(theta, dtheta, 'r') plt.title('Phase Portrait') plt.xlabel('\u03b8 (rad)'); plt.ylabel('d\u03b8/dt (rad/s)') plt.show()","title":"6.1 Complete Python Model"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#62-visualization-suite","text":"Output figures: 1. Time series : System evolution \u03b8(t) 2. Phase portraits : Trajectories in (\u03b8, d\u03b8/dt) space 3. Poincar\u00e9 maps : System state sampled at driving period 4. Bifurcation diagrams : Behavior vs control parameter Visualization: ??? [Figure 5: Complete simulation output showing (A) time series, (B) phase portrait, (C) Poincar\u00e9 section, and (D) bifurcation diagram for the default parameters.]","title":"6.2 Visualization Suite"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#7-limitations-and-extensions","text":"","title":"7. Limitations and Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#71-model-limitations","text":"Assumes constant parameters (\u03b2, F, \u03c9) Neglects higher-order nonlinearities Idealizes driving force as pure cosine","title":"7.1 Model Limitations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#72-advanced-extensions","text":"Nonlinear damping : math \\text{Damping force} = \\beta_1\\dot{\\theta} + \\beta_2|\\dot{\\theta}|\\dot{\\theta} Coupled pendulums : math \\frac{d^2\\theta_1}{dt^2} = -\\omega_0^2\\sin\\theta_1 + k(\\theta_2 - \\theta_1) Stochastic forcing : math \\frac{d^2\\theta}{dt^2} + 2\\beta\\frac{d\\theta}{dt} + \\omega_0^2\\sin\\theta = F(t) where F(t) is random noise.","title":"7.2 Advanced Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#8-conclusion","text":"This analysis has demonstrated: 1. The rich dynamical behavior of forced damped pendulums 2. Transition mechanisms from order to chaos 3. Practical applications across engineering disciplines Future directions: - Experimental validation with physical pendulum setups - Machine learning approaches for chaos prediction - Quantum analogies in nanomechanical systems The forced damped pendulum remains a fundamental model system for understanding nonlinear dynamics across physics and engineering.","title":"8. Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"}]}